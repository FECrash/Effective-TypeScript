/**
 * never, unknown, any 타입에 대해 정리하여 최대한 상세하게 적어주세요.
 */



// any
// - 타입 중에서 가장 큰 집합인 타입입니다. 
// - 모든 타입을 포함하고, 어떤 값도 가질 수 있습니다.
// - any 타입을 선언해서 할당한 변수의 경우에 함수의 시그니처를 무시할 수 있습니다.
// - as any 를 사용하면 에러가 발생하는 곳을 무시할 수 있습니다.
// - any를 사용하는 것은 좋지 못하며, 최대한 사용을 지양하되 Js => TS 를 마이그레이션 하는 등 점진적인 방법을 도입할 때 사용할 수 있습니다.


// never
// - 타입 중에서 가장 작은 공집합을 뜻합니다.
// - never & OtherType => never 타입이 됩니다.
// - never | OtherType => OtherType 이 됩니다.
// - 함수 표현식 등에서 항상 오류를 발생시키거나 절대 반환하지 않는 함수의 타입으로 사용됩니다.
// - 모든 타입에 할당 가능한 하위 타입입니다.

// unknown
// - 타입을 특정할 수 없는 경우, 즉 알 수 없는 경우에 사용할 수 있습니다.
// - any와 유사하게 모든 값을 허용할 수 있지만 any는 어떤 프로퍼티 접근도 허용하는 반면에 unknown은 허용하지 않습니다.
// - 즉, unknown은 어떤 값도 가능하다는 뜻이 아니라 어떤 값이 올 지 모르기 때문에 더욱 검사를 실행하도록 표시하는 의미도 있습니다.
// - 아직은 알 수 없는 타입에 사용하는 unknown의 경우에 제네릭과 유사하게 느껴졌지만, 
// 제네릭의 경우에는 리턴 값 등에서 제네릭을 사용할 수 있어 반환 값을 특정할 수 있다는 차이가 있다고 느껴졌습니다.